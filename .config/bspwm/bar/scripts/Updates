#!/usr/bin/env bash

# -----------------------------------------------------------------------------------
#
# ██╗   ██╗██████╗ ██████╗  █████╗ ████████╗███████╗
# ██║   ██║██╔══██╗██╔══██╗██╔══██╗╚══██╔══╝██╔════╝
# ██║   ██║██████╔╝██║  ██║███████║   ██║   █████╗  
# ██║   ██║██╔═══╝ ██║  ██║██╔══██║   ██║   ██╔══╝  
# ╚██████╔╝██║     ██████╔╝██║  ██║   ██║   ███████╗
#  ╚═════╝ ╚═╝     ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝
#
# ----- Author: Shen - url: https://github.com/Shentxt -----

get_total_updates() {
    local total_updates=$(($(checkupdates 2> /dev/null | wc -l || echo 0) + $(paru -Qua 2> /dev/null | wc -l || echo 0)))
    echo "${total_updates:-0}"
}

get_list_updates() {
    echo -e "\033[1m\033[34mRegular updates:\033[0m"
    checkupdates | sed 's/->/\x1b[32;1m\x1b[0m/g'
}

get_list_aur_updates() {
    echo -e "\n\033[1m\033[34mAur updates available:\033[0m"
    paru -Qua | sed 's/->/\x1b[32;1m\x1b[0m/g'
}

print_updates() {
    while true; do
        notify-send "Akihiko" "reading you can improve your <span color='green'>academy</span>." -i ~/.config/bspwm/assets/icons/persona/akihiko.png
        echo "1. Search file"
        echo "2. Search pack"
        echo "3. Exit"
        read -p "Please enter your choice (1, 2 or 3): " choice

        case "$choice" in
            1) file ;;
            2) pack ;;
            3) echo "Exiting..."; break ;;
            *) echo "Invalid option." ;;
        esac
    done
}

file() {
    selected_file=$(find . -type f | fzf --preview 'cat {}')
    if [[ ! -z "$selected_file" ]]; then
      alacritty -e nvim "$selected_file"
    fi
}

pack() {
    while true; do
        selected=$(paru -Qe | awk '{print $1 " - " $2}' | fzf --multi --preview 'paru -Si {1}')
        
        if [[ ! -z "$selected" ]]; then
            package=$(echo "$selected" | awk '{print $1}')
            echo "Removing $package..."
            paru -Rns "$package"
            echo "Removal completed. You can continue to select packages."
        else
            echo -e "\033[1m\033[32mNo more packages to remove!\033[0m"
            break
        fi
    done
}

update_system() {
    notify-send "Akihiko" "Updating your equipment improves <span color='green'>performance</span>." -i ~/.config/bspwm/assets/icons/persona/akihiko.png
    # Check for broken packages 
    broken_packages=$(paru -Qdtq)
    if [[ ! -z "$broken_packages" ]]; then
        echo "Broken packages found. Attempting to repair..."
        for pkg in $broken_packages; do
            echo "Reinstalling $pkg..."
            paru -S --needed "$pkg"
        done
        echo "Broken packages have been repaired."
    fi

    # Check for errors or missing packages
    missing_packages=$(paru -Qu | grep -v '[installed]')
    if [[ ! -z "$missing_packages" ]]; then
        echo "Missing packages found. Attempting to install..."
        for pkg in $missing_packages; do
            echo "Installing $pkg..."
            paru -S --needed "$pkg"
        done
        echo "Missing packages have been installed."
    fi

    while true; do
        selected=$(paru -Qu | awk '{print $1 " - " $2}' | fzf --multi --preview 'paru -Si {1}')
        
        if [[ ! -z "$selected" ]]; then
            package=$(echo "$selected" | awk '{print $1}')
            echo "Installing update for $package..."
            paru -S "$package"
            echo "Update installed. You can continue to select updates."
            # Send a signal to Polybar to update the updates module
            polybar-msg action "#updates.hook.0"
        else
            echo -e "\033[1m\033[32mNo more updates to install!\033[0m"
            break
        fi
    done    
}

case "$1" in
    --get-updates)get_total_updates ;;
    --print-updates)print_updates ;;
    --update-system)update_system ;;
    --help|*)echo -e "Updates [options]

Options:
	--get-updates		Get the number of updates available.
	--print-updates		Print the number of available package to update.
	--update-system		Update your system including the AUR packages.\n"
esac
