#!/usr/bin/env bash

# -------------------------------------------------------------
#
#  ██████╗ ███████╗██████╗ ██╗    ██╗███╗   ███╗██████╗  ██████╗
#  ██╔══██╗██╔════╝██╔══██╗██║    ██║████╗ ████║██╔══██╗██╔════╝
#  ██████╔╝███████╗██████╔╝██║ █╗ ██║██╔████╔██║██████╔╝██║
#  ██╔══██╗╚════██║██╔═══╝ ██║███╗██║██║╚██╔╝██║██╔══██╗██║
#  ██████╔╝███████║██║     ╚███╔███╔╝██║ ╚═╝ ██║██║  ██║╚██████╗
#  ╚═════╝ ╚══════╝╚═╝      ╚══╝╚══╝ ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝
#
# ----- Author: Shen - url: https://github.com/Shentxt -----

#|||----- Load -----|||#

PATH="$HOME/.config/bspwm/scripts:$PATH"

## Fix java applications
export _JAVA_AWT_WM_NONREPARENTING=1

#|||----- Workspaces -----|||#

# Default 1 monitor with 6 workspaces
for monitor in "$(xrandr -q | grep -w 'connected' | cut -d' ' -f1)"; do
	bspc monitor "$monitor" -d '1' '2' '3' '4'
	#bspc monitor "$monitor" -d '1' '2' '3' '4' '5' '6'
	#bspc monitor "$monitor" -d '' '' '' '' '' ''
done

#|||----- BSPWM -----|||#

bspc config external_rules_command "$HOME"/.config/bspwm/scripts/ExternalRules

bspc config window_gap 16
bspc config split_ratio 0.50
bspc config single_monocle true
bspc config borderless_monocle false
bspc config gapless_monocle false

bspc config focus_follows_pointer true
bspc config pointer_follows_focus false
bspc config pointer_motion_interval 5
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner

outer='0x2E3440'  # outer
inner1='0xcba6f7' # focused
inner2='0xECEFF4' # normal

get_hex() {
	local originalHex=$1
	echo $originalHex | sed 's/0x/#/g'
}

bspc config border_width 3
#bspc config normal_border_color "$(get_hex $outer)"
#bspc config focused_border_color "$(get_hex $outer)"
bspc config normal_border_color "#8FAFD1"
bspc config focused_border_color "#cba6f7"

draw() { chwb2 -I "$inner" -O "$outer" -i "4" -o "9" $* | :; }

#bspc wm --adopt-orphans
bspc rule -a scratch sticky=on state=floating focus=on

#|||----- Autostart -----|||#

# Set system vars for polybar
. SetSysVars

pkill xautolock

~/.config/bspwm/scripts/welcome &
~/.config/bspwm/scripts/brightnes &
~/.config/bspwm/scripts/autokill &

xautolock -time 5 -locker "betterlockscreen -l" -killer "systemctl suspend" &

# Terminate already running polybar, stalonetray, sxhkd and dunst instances
processes=("eww.*bar" "polybar" "sxhkd" "dunst" "stalonetray")

for process in "${processes[@]}"; do
	if pgrep -f "$process"; then
		pkill -9 -f "$process" >/dev/null
		sleep 0.1
	fi
done

# Launch picom // If you have old hardware or encounter problems
# uncomment the picom "--legacy-backends" line and comment the current one.
pidof -q picom || { picom --config "$HOME"/.config/bspwm/picom.conf & }
#pidof -q picom || { picom --legacy-backends --config "$HOME"/.config/bspwm/picom.conf & }

# Set random wallpaper for actual rice
feh -z --no-fehbg --bg-fill ~/.config/bspwm/assets/walls

# Launch eww daemon
polybar -q ryan-bar -c "$HOME"/.config/bspwm/bar/config.ini & 

# Reload sxhkd daemon
sxhkd -c "$HOME"/.config/bspwm/sxhkdrc &

# Launch dunst notification daemon
dunst -config "$HOME"/.config/bspwm/dunstrc &

# Launch stalonetray
stalonetray -c "$HOME"/.config/bspwm/stalonetrayrc &
sleep 0.1 && xdo hide -N stalonetray && touch "/tmp/syshide.lock"

# Launch polkit
pidof -q polkit-gnome-authentication-agent-1 || { /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 & }

# Fix cursor
xsetroot -cursor_name left_ptr

copyq &
